"""1. Отсортируйте по убыванию методом пузырька одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100).
Выведите на экран исходный и отсортированный массивы.
Примечания:
a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных.
b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут."""

import random


def bubble_sort(arr):
    """
    Для проверки скорости можно видоизменить код следующим образом:

    def bubble_sort(x, y):  # (arr) меняем на (x, y) и добавляем две строчки кода в функцию:
        arr = [i for i in range(x, y)]
        random.shuffle(arr)

    затем введите в терминале следующую строку:
    python -m timeit -n 10 -s "import task_1" "task_1.bubble_sort(-100, 100)"
    """

    n = 0
    m = -1
    j = 1

    while j < len(arr):

        for i in range(n, len(arr) + m):

            # сортировка пузырьком (8.34 msec):
            # if arr[i] > arr[i + 1]:
            #     arr[i], arr[i + 1] = arr[i + 1], arr[i]

            # улучшенная версия сортировки пузырьком (1.41 msec):
            if arr[i] == x + n:
                arr[i], arr[n] = arr[n], arr[i]
                n += 1
            if arr[i] == y + m:
                arr[i], arr[m] = arr[m], arr[i]
                m -= 1

        j += 1

    return arr


if __name__ == "__main__":
    x = -100
    y = 100
    array = [i for i in range(x, y)]
    random.shuffle(array)  # перемешиваем список
    print(array)

    print(bubble_sort(array))
